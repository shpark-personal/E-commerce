name: devel workflow

on:
  push:
    branches:
      - devel
  pull_request:
    branches:
      - devel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.18.0'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint
        continue-on-error: false

      - name: Build
        run: npm run build
        continue-on-error: false

      - name: Test
        run: npm run test
        continue-on-error: false

      - name: Set up Docker Compose
        uses: docker/compose-cli@v2
        # fixme : version

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest tag
        id: update_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0)
          new_tag="${latest_tag}-dev"
          echo "print ${new_tag}"
          sed -i "s/ecommerce:\${latest_tag}/ecommerce:${new_tag}/g" docker-compose.yml

      - name: Build and Push Docker images
        env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          REPOSITORY: ${{ secrets.DOCKER_REPO }}
          TAG: ${{ steps.update_tag.outputs.new_tag }}
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Run Docker Compose
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          REPOSITORY: ${{ secrets.DOCKER_REPO }}
        run: docker-compose up -d
